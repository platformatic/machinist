name: Release

on:
  workflow_dispatch:
    inputs:
      branch:
        description: "Branch to release from"
        required: true
        default: "main"
        type: string
      version:
        description: "Version to release (e.g., 1.0.0)"
        required: true
        type: string

jobs:
  test:
    uses: ./.github/workflows/test.yml
    secrets: inherit

  release:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          ref: ${{ inputs.branch }}
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: "22"

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Update version in package.json files
        run: |
          # Update root package.json
          npm version ${{ inputs.version }} --no-git-tag-version

          # Update all service package.json files
          for service in services/*/; do
            if [ -f "$service/package.json" ]; then
              cd "$service"
              npm version ${{ inputs.version }} --no-git-tag-version
              cd ../..
            fi
          done

      - name: Commit version changes
        run: |
          git add .
          git commit -m "chore: release v${{ inputs.version }}"
          git push origin ${{ inputs.branch }}

      - name: Create and push tag
        run: |
          git tag -a "v${{ inputs.version }}" -m "Release v${{ inputs.version }}"
          git push origin "v${{ inputs.version }}"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract Docker image metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ vars.DOCKER_USERNAME }}/machinist

      - name: Login to Container Registry
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      - name: Set repository name
        run: |
          echo "REPOSITORY_NAME=$(basename $GITHUB_REPOSITORY)" >> $GITHUB_ENV

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            platformatic/${{ env.REPOSITORY_NAME }}:latest,platformatic/${{ env.REPOSITORY_NAME }}:v${{ inputs.version }}
          build-args: |
            COMMIT_HASH=${{ github.sha }}
            BUILD_TIME=${{ github.event.repository.updated_at }}
